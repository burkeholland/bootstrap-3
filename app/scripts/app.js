/*! Responsive Design With Bootstrap 3 - v0.0.0 - 2013-08-25
* Copyright (c) 2013 ; Licensed  */
 window.APP = {}; window.APP.slides = {};// Generated by CoffeeScript 1.6.3
(function() {
  var $current, done, effect;

  effect = kendo.fx;

  $current = null;

  done = function() {
    $current = null;
    return $.publish("/effects/done");
  };

  $.subscribe("/effects/setup", function(e, el) {
    return el.find("[data-effect]").each(function() {
      var $that;
      $that = $(this);
      effect = $that.data("effect");
      switch (effect) {
        case "replace":
          return $that.find("> *:not(:first-child)").hide();
        case "fragment":
          return $that.children().hide();
        case "fadeIn":
          return $that.hide();
      }
    });
  });

  $.subscribe("/effects/process", function(e, el) {
    var $el, $next;
    $el = $(el);
    if ($current === null) {
      $current = $el.children().first();
    }
    switch ($el.data("effect")) {
      case "replace":
        $next = $current.next();
        return kendo.fx($el).expand("vertical").duration(1000).reverse().then(function() {
          $current.hide();
          $next.show();
          $current = $next;
          if ($current.next().length === 0) {
            done();
          }
          return setTimeout(function() {
            return kendo.fx($el).expand("vertical").duration(1000).play().then(function() {});
          }, 1);
        });
      case "fragment":
        return kendo.fx($current).fade("in").play().then(function() {
          if ($current.next().length === 0) {
            return done();
          } else {
            return $current = $current.next();
          }
        });
      case "fadeIn":
        return kendo.fx($el).fade("in").play().then(function() {
          return done();
        });
    }
  });

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var app, effectsQueue, idCounter, next, nextSlide, paused, previous, slideNumber;

  slideNumber = 1;

  nextSlide = 2;

  effectsQueue = [];

  paused = false;

  $(".slide").kendoTouch({
    surface: $(".slide"),
    enableSwipe: true,
    swipe: function(e) {
      if (e.direction === "left") {
        next();
      }
      if (e.direction === "right") {
        return previous();
      }
    }
  });

  previous = function() {
    nextSlide = slideNumber - 1;
    if (nextSlide > 0) {
      app.navigate("#slide" + nextSlide);
      return slideNumber = nextSlide;
    }
  };

  next = function() {
    nextSlide = slideNumber + 1;
    if (nextSlide <= idCounter) {
      if (effectsQueue.length > 0) {
        return $.publish("/effects/process", [effectsQueue[0]]);
      } else {
        app.navigate("#slide" + nextSlide);
        return slideNumber = nextSlide;
      }
    }
  };

  $(document).keydown(function(e) {
    if (e.keyCode === 9) {
      paused = false;
    }
    if (!paused) {
      if (e.keyCode === 37) {
        previous();
        return false;
      }
      if (e.keyCode === 39) {
        next();
        return false;
      }
    }
  });

  $.subscribe("/effects/done", function() {
    return effectsQueue.splice(0, 1);
  });

  $.subscribe("/controls/paused", function(e, flag) {
    return paused = flag;
  });

  window.APP.slides.init = function(e) {
    return slideNumber = parseInt(this.element.data("slide"));
  };

  window.APP.slides.show = function(e) {
    var $slide, fit;
    $slide = e.view.element;
    fit = $slide.find(".fit").each(function() {
      return $(this).fitText($(this).data("fit") || 1);
    });
    $slide.find(".fitvids").fitVids();
    effectsQueue = $slide.find("[data-effect]");
    return $.publish("/effects/setup", [$slide]);
  };

  idCounter = 1;

  $("[data-role='view']").each(function() {
    var $that;
    $that = $(this);
    $that.attr("id", "slide" + idCounter);
    $that.attr("data-slide", idCounter);
    $that.attr("data-init", "APP.slides.init");
    $that.attr("data-show", "APP.slides.show");
    $that.attr("data-layout", "slideDeck");
    $that.attr("data-stretch", "true");
    return idCounter++;
  });

  app = new kendo.mobile.Application(document.body, {
    initial: "slide1",
    transition: "fade"
  });

  $("a").on("click", function(e) {
    return document.location = e.currentTarget.href;
  });

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var bootstrap, paused, viewModel;

  paused = function(flag) {
    return $.publish("/controls/paused", [flag]);
  };

  bootstrap = true;

  viewModel = kendo.observable({
    toggleBootstrap: function() {
      var $bootstrap;
      $bootstrap = $("#bootstrap");
      if (bootstrap) {
        $bootstrap.attr("rel", "notastylesheet");
        return bootstrap = false;
      } else {
        $bootstrap.attr("rel", "stylesheet");
        return bootstrap = true;
      }
    },
    pauseControls: function() {
      return paused(true);
    },
    unpauseControls: function() {
      paused(false);
      return this.set("editorVisible", false);
    },
    updateSampleQuery: function(e) {
      var style;
      style = $("#scoped-sample-query");
      style.html($(e.currentTarget).text());
      return paused(false);
    },
    screenSize: $(window).width(),
    updateHtml: function(e) {
      return setTimeout(function() {
        var $slide, $source, $target;
        $source = $(e.currentTarget);
        $slide = $source.closest(".slide");
        $target = $slide.find($source.data("target"));
        if ($target.length > 0) {
          return $slide.find($target).html($source.text());
        } else {
          return $source.next().html($source.text());
        }
      }, 100);
    },
    containerWidth: 0,
    containerPadding: 0,
    containerMargin: 0,
    editorVisible: false,
    showEditor: function() {
      var visible;
      visible = this.get("editorVisible");
      if (visible) {
        return this.set("editorVisible", false);
      } else {
        return this.set("editorVisible", true);
      }
    }
  });

  $(window).resize(function() {
    viewModel.set("screenSize", $(this).width());
    return viewModel.set("containerWidth", $(".container-demo").width());
  });

  window.APP.slides.viewModel = viewModel;

}).call(this);
